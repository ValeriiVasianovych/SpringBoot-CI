---
name: Java CI with Spring Boot
env:
  AWS_REGION           :  us-east-1
  EKS_CLUSTER_NAME     :  spring-boot-cluster
  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCESS_KEY_ID    :  ${{ secrets.AWS_ACCESS_KEY_ID }}
  ECR_REPOSITORY       :  spring
on:
  push:
    branches: [ master ]

jobs:
  build:

    name: Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Set short git commit hash
        id: commit
        uses: prompt/actions-commit-hash@v2
       
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
           version: 'latest'
        id: install
          
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build the App
        run: |
          mvn clean package
          mvn -B package --file pom.xml
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.commit.outputs.short }}

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update Kubernetes Config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Deploy to Amazon EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" kubernetes/deployment.yaml && \
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml

        